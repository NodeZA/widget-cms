0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish', '.' ]
2 info using npm@3.8.0
3 info using node@v4.2.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/qawemlilo/code/widget-cms',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/qawemlilo/.npm/widget-cms/0.2.6/package.tgz not in flight; packing
9 verbose correctMkdir /Users/qawemlilo/.npm correctMkdir not in flight; initializing
10 info lifecycle widget-cms@0.2.6~prepublish: widget-cms@0.2.6
11 silly lifecycle widget-cms@0.2.6~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/qawemlilo/.npm/widget-cms/0.2.6/package.tgz',
12 verbose tar pack   '/Users/qawemlilo/code/widget-cms' ]
13 verbose tarball /Users/qawemlilo/.npm/widget-cms/0.2.6/package.tgz
14 verbose folder /Users/qawemlilo/code/widget-cms
15 verbose addLocalTarball adding from inside cache /Users/qawemlilo/.npm/widget-cms/0.2.6/package.tgz
16 verbose correctMkdir /Users/qawemlilo/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd widget-cms@0.2.6
18 verbose afterAdd /Users/qawemlilo/.npm/widget-cms/0.2.6/package/package.json not in flight; writing
19 verbose correctMkdir /Users/qawemlilo/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/qawemlilo/.npm/widget-cms/0.2.6/package/package.json written
21 silly publish { name: 'widget-cms',
21 silly publish   version: '0.2.6',
21 silly publish   description: 'A highly modular Node.js application framework',
21 silly publish   main: 'index.js',
21 silly publish   scripts:
21 silly publish    { test: 'echo "Error: no test specified" && exit 1',
21 silly publish      start: 'node server.js' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+ssh://git@github.com/NodeZA/widget-cms.git' },
21 silly publish   keywords: [ 'cms', 'express' ],
21 silly publish   author: { name: 'Qawelesizwe Mlilo' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/NodeZA/widget-cms/issues' },
21 silly publish   homepage: 'https://github.com/NodeZA/widget-cms#readme',
21 silly publish   dependencies:
21 silly publish    { 'body-parser': '^1.15.1',
21 silly publish      bookshelf: '^0.9.5',
21 silly publish      'connect-redis': '^3.0.2',
21 silly publish      'cookie-parser': '^1.4.2',
21 silly publish      errorhandler: '^1.4.3',
21 silly publish      express: '^4.13.4',
21 silly publish      'express-flash': '0.0.2',
21 silly publish      'express-redis-cache': '^0.3.0',
21 silly publish      'express-session': '^1.13.0',
21 silly publish      'express-validator': '^2.20.4',
21 silly publish      'file-stream-rotator': '0.0.6',
21 silly publish      hbs: '^4.0.0',
21 silly publish      knex: '^0.11.0',
21 silly publish      lodash: '^4.12.0',
21 silly publish      lusca: '^1.4.0',
21 silly publish      'mime-types': '^2.1.11',
21 silly publish      moment: '^2.12.0',
21 silly publish      morgan: '^1.7.0',
21 silly publish      multer: '^1.1.0',
21 silly publish      mysql: '^2.10.2',
21 silly publish      passport: '^0.3.2',
21 silly publish      'passport-local': '^1.0.0',
21 silly publish      'type-is': '^1.6.13',
21 silly publish      unidecode: '^0.1.8',
21 silly publish      when: '^3.7.7',
21 silly publish      'widget-loader': '^0.2.0' },
21 silly publish   readme: '# WigGet-CMS\n> A highly modular Node.js application framework\n\n### Getting started\n`widget-cms` is a framework for building Node.js applications. It is build around the following concepts - `Models`, `Collections`, `Controllers`, `Routes`, `Plugins`, and `Widgets`. Under the hood it uses an express server, Bookshelf.js to connect to your SQL database of choice, and Redis for caching and session management.\n\n 1. Install `widget-cms` inside your root directory: `npm install widget-cms --save`\n 2. Create the required directories: `mkdir models collections controllers widgets plugins routes`\n 3. Create your application entry file:\n\n```javascript\n"use strict";\n\nconst app = require(\'widget-cms\');\nconst path = require(\'path\');\n\n\napp.config({\n  port: 3000, // default 3000\n\n  secret: \'your_app_secret_here\',\n\n  saveLogs: true,  // write application logs to files\n\n  db: {              // required\n    client: \'mysql\', // options - mysql, pg, mariasql, sqlite3\n    connection: {\n      host: \'localhost\',\n      user: \'root\',\n      password: \'\',\n      database: \'widget_cms\',\n      charset: \'utf8\'\n    }\n  },\n\n  redis: {}, // optional - assumes {host: localhost, port: 6379}\n\n  cache: true, // optional - defaults to false\n\n  rootDir: process.cwd(), // required\n\n  /**** optional\n\n  viewsDir: path.join(process.cwd(), \'views\'), // optional - defaults to ./views\n\n  modelsDir: path.join(process.cwd(), \'views\'), // optional - defaults to ./models\n\n  collectionsDir: path.join(process.cwd(), \'views\'), // optional - defaults to ./collections\n\n  controllersDir: path.join(process.cwd(), \'views\'), // optional - defaults to ./controllers\n\n  widgetsDir: path.join(process.cwd(), \'views\'), // optional - defaults to ./widgets\n\n  pluginsDir: path.join(process.cwd(), \'views\'), // optional - defaults ./plugins\n\n  *****/\n\n  middleware: {\n    enableForms: true,\n    enableCSRF: true,\n    enableSessions: true\n  }\n});\n\napp.registerMiddleware(function (req, res, next) {\n  // pass user object to templates\n  res.locals.user = {\n    name: \'Que\',\n    email: \'que@widget-cms.com\'\n  };\n\n  next();\n});\n\napp.start();\n```\n\n### How it works\nTodo..\n\n### Models\n```javascript\nconst App = require(\'widget-cms\');\n\nconst User = App.Model.extend({\n\n  tableName: \'users\'\n\n});\n\nmodule.exports = App.addModel(\'User\', User);\n```\n\n### Collections\n```javascript\nconst App = require(\'widget-cms\');\nconst User = App.getModel(\'User\');\n\nconst Users = App.Collection.extend({\n\n  model: User\n\n});\n\nmodule.exports = App.addCollection(\'Users\', Users);\n```\n\n### Controllers\nCreating a controller.\n\n```javascript\nconst App = require(\'widget-cms\');\n\nconst UsersController = App.Controller.extend({\n  getUsers: function (req, res) {\n    let Users = App.getCollection(\'Users\');\n\n    Users.forge()\n    .then(function (collection) {\n      res.json(collection.toJSON());\n    })\n    .catch(function (error) {\n      next(error);\n    });\n  }\n});\n\nmodule.exports = App.addController(\'Users\', getUsers);\n```\n\n### Routes\nExample of a route.\n\n```javascript\nconst App = require(\'widget-cms\');\nconst UsersController = App.getController(\'Users\');\n\nApp.get(\'/users\', UsersController.getUsers);\n```\n\n\n\n\n### License\n\n(MIT License)\n\nCopyright (C) 2016 Qawelesizwe Mlilo <qawemlilo@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \'Software\'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '6aa1726410a721221eee69fdd86d00b6b3c77546',
21 silly publish   _id: 'widget-cms@0.2.6',
21 silly publish   _shasum: '2617d10e6b443b7512ad361062c1421e6cd25f58',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name widget-cms
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry uri https://registry.npmjs.org/widget-cms
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /Users/qawemlilo/.npm/widget-cms/0.2.6/package.tgz
29 verbose request uri https://registry.npmjs.org/widget-cms
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 3:30:56 PM
32 verbose request using bearer token for auth
33 verbose request id 3c9caf17fa359d4f
34 http request PUT https://registry.npmjs.org/widget-cms
35 http 403 https://registry.npmjs.org/widget-cms
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '95',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Sun, 22 May 2016 13:30:59 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-lhr6345-LHR',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1463923858.181280,VS0,VE1013',
36 verbose headers   vary: 'Accept-Encoding' }
37 verbose request invalidating /Users/qawemlilo/.npm/registry.npmjs.org/widget-cms on PUT
38 error publish Failed PUT 403
39 verbose stack Error: "You cannot publish over the previously published version 0.2.6." : widget-cms
39 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:199:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1036:10)
39 verbose stack     at emitOne (events.js:82:20)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:963:12)
40 verbose statusCode 403
41 verbose pkgid widget-cms
42 verbose cwd /Users/qawemlilo/code/widget-cms
43 error Darwin 14.5.0
44 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish" "."
45 error node v4.2.2
46 error npm  v3.8.0
47 error code E403
48 error "You cannot publish over the previously published version 0.2.6." : widget-cms
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
